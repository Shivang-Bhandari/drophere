// Generated by CoffeeScript 1.4.0
var ImgurService, PastebinService, Service, config, fs, request,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

config = require('./config.js');

request = require('request');

fs = require('fs');

Service = (function() {

  function Service() {}

  Service.prototype._handle_body = function(body) {};

  Service.prototype.dispatch = function(file, callback) {};

  return Service;

})();

PastebinService = (function(_super) {

  __extends(PastebinService, _super);

  function PastebinService() {
    return PastebinService.__super__.constructor.apply(this, arguments);
  }

  PastebinService.prototype.dispatch = function(file, callback) {
    var data, request_params, send_params;
    data = fs.readFileSync(file.path, "utf-8");
    send_params = {
      api_dev_key: config.pastebin.api_key,
      api_option: 'paste',
      api_paste_code: data,
      api_paste_name: file.name,
      api_paste_private: 1
    };
    request_params = {
      method: 'POST',
      uri: config.pastebin.api_url,
      form: send_params
    };
    return request(request_params, function(error, response, body) {
      var message, url, _ref;
      _ref = [null, null], url = _ref[0], message = _ref[1];
      if (error || response.statusCode !== 200) {
        message = body;
        error = true;
      } else {
        error = false;
        url = body;
      }
      return callback(error, file.name, url, message);
    });
  };

  return PastebinService;

})(Service);

ImgurService = (function(_super) {

  __extends(ImgurService, _super);

  function ImgurService() {
    return ImgurService.__super__.constructor.apply(this, arguments);
  }

  ImgurService.prototype.dispatch = function(file, callback) {
    var data, request_params, send_params;
    data = fs.readFileSync(file.path, "base64");
    send_params = {
      image: data,
      title: file.name
    };
    request_params = {
      method: 'POST',
      uri: config.imgur.api_url,
      form: send_params,
      headers: {
        Authorization: "Client-ID " + config.imgur.api_client_id
      }
    };
    return request(request_params, function(error, response, body) {
      var link, message, url, _ref;
      _ref = [null, null], url = _ref[0], message = _ref[1];
      if (error || response.statusCode !== 200) {
        message = body;
        error = true;
      } else {
        link = JSON.parse(body).data.link;
        url = link;
        error = false;
      }
      return callback(error, file.name, url, message);
    });
  };

  return ImgurService;

})(Service);

exports.PastebinService = PastebinService;

exports.ImgurService = ImgurService;
